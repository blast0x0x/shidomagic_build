{"version":3,"sources":["views/Home/components/CompositeImage.tsx","views/Home/components/SlideSvg.tsx","views/Home/hooks/useGetTopFarmsByApr.tsx","views/Home/components/Hero.tsx","views/Home/components/SalesSection/data.ts","views/Home/components/IconCard.tsx","views/Home/components/MetricsSection/StatCardContent.tsx","state/hooks.ts","views/Home/components/MetricsSection/index.tsx","views/Home/components/PurpleWordHeading.tsx","views/Home/components/SalesSection/index.tsx","hooks/useIntersectionObserver.ts","views/Home/hooks/useGetTopPoolsByApr.tsx","views/Home/components/FarmsPoolsRow/TopFarmPool.tsx","views/Home/components/FarmsPoolsRow/RowHeading.tsx","views/Home/components/FarmsPoolsRow/index.tsx","views/Home/components/CakeDataRow.tsx","views/Home/components/WedgeSvgs.tsx","views/Home/hooks/useFarmsWithBalance.tsx","views/Home/components/UserBanner/HarvestCard.tsx","views/Home/components/UserBanner/EarningsText.tsx","views/Home/components/UserBanner/UserDetail.tsx","views/Home/components/UserBanner/index.tsx","views/Home/index.tsx","views/Profile/components/ProfileAvatar.tsx","components/PageSection/svg/CurvedSvg.tsx","components/PageSection/CurvedDivider.tsx","components/PageSection/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"names":["Resolution","SlideSvgLight","props","viewBox","d","fill","id","x1","y1","x2","y2","gradientUnits","stopColor","stopOpacity","offset","SlideSvgDark","floatingAnim","x","y","keyframes","Wrapper","styled","Box","maxHeight","DummyImg","img","ImageWrapper","FetchStatus","getImageUrl","base","imageSrc","resolution","getSrcSet","MD","LG","CompositeImage","path","attributes","src","srcSet","map","image","alt","fading","BgWrapper","div","InnerWrapper","BunnyWrapper","StarsWrapper","imagePath","starsImage","Hero","t","useTranslation","account","useWeb3React","theme","useTheme","isDark","width","position","flexDirection","alignItems","justifyContent","flex","scale","color","mb","ConnectWalletButton","mr","href","variant","height","swapSectionData","headingText","bodyText","reverse","primaryButton","to","text","external","secondaryButton","images","earnSectionData","cakeSectionData","StyledCard","Card","mediaQueries","md","rotation","IconWrapper","IconCard","icon","background","borderColor","children","borderBackground","StatCardContent","highlightColor","useMatchBreakpoints","isMobile","isTablet","isSmallerScreen","split","lastWord","pop","remainingWords","slice","length","join","minHeight","minWidth","mt","ZERO","BigNumber","useFarmFromPid","pid","useSelector","state","farms","data","find","f","usePriceBnbBusd","farm","tokenPriceVsQuote","useTotalValue","ethPrice","magicPrice","ethPriceUSD","times","usePriceCakeBusd","value","i","quoteTokenAmountTotal","val","quoteToken","symbol","QuoteToken","SHIDO","MAGIC","plus","StyledNoProfileAvatarIcon","NoProfileAvatarIcon","Sticker","Flex","card","boxShadow","colors","invertedContrast","radii","circle","Stats","totalValue","toFixed","trades","formatLocalisedCompactNumber","users","tvl","UsersCardData","TradesCardData","StakedCardData","textAlign","bold","secondary","primary","failure","PurpleWordHeading","firstWord","style","SalesSection","headingTranslatedText","bodyTranslatedText","ml","alignSelf","fontSize","useIntersectionObserver","observerRef","useRef","useState","observerIsSet","setObserverIsSet","isIntersecting","setIsIntersecting","useEffect","IntersectionObserver","entry","rootMargin","threshold","observe","current","useGetTopFarmsByApr","dispatch","useAppDispatch","useFarms","NOT_FETCHED","fetchStatus","setFetchStatus","topFarms","setTopFarms","cakePriceBusd","fetchFarmData","a","FETCHING","activeFarms","nonArchivedFarms","filter","multiplier","fetchFarmsPublicDataAsync","SUCCESS","console","error","FAILED","farmsState","farmsWithApr","lpTotalInQuoteToken","usdcPrice","totalLiquidity","getFarmApr","poolWeight","lpAddresses","ChainId","MAINNET","cakeRewardsApr","lpRewardsApr","apr","sortedByApr","orderBy","getTopFarmsByApr","useGetTopPoolsByApr","poolsWithoutAutoVault","pools","userDataLoaded","performanceFee","useCakeVault","fees","performanceFeeAsDecimal","topPools","setTopPools","useMemo","cakePool","pool","isFinished","sousId","cakeAutoVault","isAutoVault","getAprData","fetchPoolsPublicData","simpleRpcProvider","getBlockNumber","blockNumber","fetchCakeVaultFees","fetchPoolsPublicDataAsync","activePools","getTopPoolsByApr","StyledWrapper","AbsoluteWrapper","topOffset","visible","index","sm","inputSecondary","TopFarmPool","title","percentage","Balance","lineHeight","unit","RowHeading","Grid","FarmsPoolsRow","showFarms","setShowFarms","timer","isLoaded","startTimer","useCallback","setInterval","prev","clearInterval","ref","onClick","topFarm","lpSymbol","topPool","earningSymbol","earningToken","stakingSymbol","stakingToken","noMobileBorder","CakeDataRow","totalSupply","useTotalSupply","burnedBalance","getBalanceNumber","useBurnedBalance","getCakeAddress","cakeSupply","mcap","toNumber","OuterWedgeWrapper","InnerWedgeWrapper","top","WedgeTopLeft","preserveAspectRatio","WedgeTopRight","useFarmsWithBalance","farmsWithStakedBalance","setFarmsWithStakedBalance","earningsSum","setEarningsSum","fastRefresh","useRefresh","calls","farmsConfig","address","getMasterChefAddress","name","params","multicall","masterChefABI","rawResults","results","balance","farmsWithBalances","balanceType","gt","totalEarned","reduce","accum","earning","earningNumber","eq","DEFAULT_TOKEN_DECIMAL","fetchBalances","HarvestCard","pendingTx","setPendingTx","useToast","toastSuccess","toastError","farmEarningsSum","masterChefContract","useMasterchef","earningsBusd","multipliedBy","numTotalToCollect","numFarmsToCollect","hasCakePoolToCollect","toString","count","earningsText","getEarningsText","preText","toCollectText","harvestAllFarms","farmWithBalance","harvestFarm","isNaN","my","decimals","prefix","isLoading","endIcon","spin","disabled","Desktop","Mobile","UserDetail","useProfile","profile","truncatedAddress","truncateHash","ProfileAvatar","userName","username","UserBanner","p","StyledHeroSection","PageSection","UserBannerWrapper","Container","lg","Home","HomeSectionContainerStyles","margin","maxWidth","innerProps","hasCurvedDivider","MetricsSection","gradients","cardHeader","TeamAvatar","AvatarWrapper","bg","AvatarInactive","nft","isActive","team","sharedStyles","clipPath","clipFill","css","dark","light","ConcaveContainer","ConvexContainer","ConvexTop","clipPathUnits","ConvexBottom","ConcaveTop","ConcaveBottom","dividerFill","ComponentWrapper","CurvedDivider","dividerPosition","dividerComponent","concave","showConvexTop","showConvexBottom","showConcaveTop","showConcaveBottom","BackgroundColor","getPadding","ChildrenWrapper","svgFill","concaveDivider","containerProps","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","F","s","n","done","e","_e","TypeError","err","normalCompletion","didErr","step","next","_e2"],"mappings":"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","file":"static/js/18.cf362cb9.chunk.js","sourcesContent":["import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\n\r\nconst floatingAnim = (x: string, y: string) => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(${x}, ${y});\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst Wrapper = styled(Box)<{ maxHeight: string }>`\r\n  position: relative;\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n\r\n  & :nth-child(2) {\r\n    animation: ${floatingAnim('3px', '15px')} 3s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${floatingAnim('5px', '10px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${floatingAnim('6px', '5px')} 3s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n\r\n  & :nth-child(5) {\r\n    animation: ${floatingAnim('4px', '12px')} 3s ease-in-out infinite;\r\n    animation-delay: 0s;\r\n  }\r\n`\r\n\r\nconst DummyImg = styled.img<{ maxHeight: string }>`\r\n  max-height: ${({ maxHeight }) => maxHeight};\r\n  visibility: hidden;\r\n`\r\n\r\nconst ImageWrapper = styled(Box)`\r\n  height: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  img {\r\n    max-height: 100%;\r\n    width: auto;\r\n  }\r\n`\r\n\r\nenum Resolution {\r\n  MD = '1.5x',\r\n  LG = '2x',\r\n}\r\ninterface ImageAttributes {\r\n  src: string\r\n  alt: string\r\n}\r\n\r\nexport interface CompositeImageProps {\r\n  path: string\r\n  attributes: ImageAttributes[]\r\n}\r\n\r\ninterface ComponentProps extends CompositeImageProps {\r\n  animate?: boolean\r\n  maxHeight?: string\r\n}\r\n\r\nexport const getImageUrl = (base: string, imageSrc: string, resolution?: Resolution): string =>\r\n  `${base}${imageSrc}${resolution ? `@${resolution}.png` : '.png'}`\r\n\r\nexport const getSrcSet = (base: string, imageSrc: string) => {\r\n  return `${getImageUrl(base, imageSrc)} 512w, \r\n  ${getImageUrl(base, imageSrc, Resolution.MD)} 768w, \r\n  ${getImageUrl(base, imageSrc, Resolution.LG)} 1024w,`\r\n}\r\n\r\nconst CompositeImage: React.FC<ComponentProps> = ({ path, attributes, maxHeight = '512px' }) => {\r\n  return (\r\n    <Wrapper maxHeight={maxHeight}>\r\n      <DummyImg\r\n        src={getImageUrl(path, attributes[0].src)}\r\n        maxHeight={maxHeight}\r\n        srcSet={getSrcSet(path, attributes[0].src)}\r\n      />\r\n      {attributes.map((image) => (\r\n        <ImageWrapper key={image.src}>\r\n          <img src={getImageUrl(path, image.src)} srcSet={getSrcSet(path, image.src)} alt={image.alt} />\r\n        </ImageWrapper>\r\n      ))}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CompositeImage\r\n","import React from 'react'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const SlideSvgLight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 167.023C520.5 167.023 267.5 290.522 0 304.5V339H1660V0.5C1358.83 0.5 1104 167.023 804 167.023Z\"\r\n        fill=\"url(#paint0_linear_light)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_light\" x1=\"830\" y1=\"84\" x2=\"830\" y2=\"339\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"white\" stopOpacity=\"0.48\" />\r\n          <stop offset=\"0.566389\" stopColor=\"white\" stopOpacity=\"0.35\" />\r\n          <stop offset=\"1\" stopColor=\"white\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const SlideSvgDark: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 339\" {...props}>\r\n      <path\r\n        d=\"M804 166.523C520.5 166.523 267.5 290.022 0 304V338.5H1660V0C1358.83 0 1104 166.523 804 166.523Z\"\r\n        fill=\"url(#paint0_linear_dark)\"\r\n      />\r\n      <defs>\r\n        <linearGradient id=\"paint0_linear_dark\" x1=\"830\" y1=\"83.5\" x2=\"830\" y2=\"338.5\" gradientUnits=\"userSpaceOnUse\">\r\n          <stop stopColor=\"#08060B\" stopOpacity=\"0.2\" />\r\n          <stop offset=\"0.545554\" stopColor=\"#08060B\" stopOpacity=\"0.5\" />\r\n          <stop offset=\"1\" stopColor=\"#08060B\" />\r\n        </linearGradient>\r\n      </defs>\r\n    </Svg>\r\n  )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { ChainId } from '@pancakeswap/sdk'\r\nimport { useFarms, usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchFarmsPublicDataAsync, nonArchivedFarms } from 'state/farms'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport BigNumber from 'bignumber.js'\r\nimport { orderBy } from 'lodash'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { Farm } from 'state/types'\r\n\r\nenum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  FETCHING = 'fetching',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useGetTopFarmsByApr = (isIntersecting: boolean) => {\r\n  const dispatch = useAppDispatch()\r\n  const { data: farms } = useFarms()\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [topFarms, setTopFarms] = useState<FarmWithStakedValue[]>([null, null, null, null, null])\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  useEffect(() => {\r\n    const fetchFarmData = async () => {\r\n      setFetchStatus(FetchStatus.FETCHING)\r\n      const activeFarms = nonArchivedFarms.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X')\r\n      try {\r\n        await dispatch(fetchFarmsPublicDataAsync(activeFarms.map((farm) => farm.pid)))\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch (e) {\r\n        console.error(e)\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (isIntersecting && fetchStatus === FetchStatus.NOT_FETCHED) {\r\n      fetchFarmData()\r\n    }\r\n  }, [dispatch, setFetchStatus, fetchStatus, topFarms, isIntersecting])\r\n\r\n  useEffect(() => {\r\n    const getTopFarmsByApr = (farmsState: Farm[]) => {\r\n      const farmsWithPrices = farmsState.filter((farm) => farm.lpTotalInQuoteToken && farm.quoteToken.usdcPrice)\r\n      const farmsWithApr: FarmWithStakedValue[] = farmsWithPrices.map((farm) => {\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(farm.quoteToken.usdcPrice)\r\n        const { cakeRewardsApr, lpRewardsApr } = getFarmApr(\r\n          new BigNumber(farm.poolWeight),\r\n          cakePriceBusd,\r\n          totalLiquidity,\r\n          farm.lpAddresses[ChainId.MAINNET],\r\n        )\r\n        return { ...farm, apr: cakeRewardsApr, lpRewardsApr }\r\n      })\r\n\r\n      const sortedByApr = orderBy(farmsWithApr, (farm) => farm.apr + farm.lpRewardsApr, 'desc')\r\n      setTopFarms(sortedByApr.slice(0, 5))\r\n    }\r\n\r\n    if (fetchStatus === FetchStatus.SUCCESS && !topFarms[0]) {\r\n      getTopFarmsByApr(farms)\r\n    }\r\n  }, [setTopFarms, farms, fetchStatus, cakePriceBusd, topFarms])\r\n\r\n  return { topFarms }\r\n}\r\n\r\nexport default useGetTopFarmsByApr\r\n","import React from 'react'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Heading, Link, Button } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ConnectWalletButton from 'components/ConnectWalletButton'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { SlideSvgDark, SlideSvgLight } from './SlideSvg'\r\nimport CompositeImage, { getSrcSet, CompositeImageProps } from './CompositeImage'\r\n\r\nconst flyingAnim = () => keyframes`\r\n  from {\r\n    transform: translate(0,  0px);\r\n  }\r\n  50% {\r\n    transform: translate(-5px, -5px);\r\n  }\r\n  to {\r\n    transform: translate(0, 0px);\r\n  }  \r\n`\r\n\r\nconst fading = () => keyframes`\r\n  from {\r\n    opacity: 0.9;\r\n  }\r\n  50% {\r\n    opacity: 0.1;\r\n  }\r\n  to {\r\n    opacity: 0.9;\r\n  }  \r\n`\r\n\r\nconst BgWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  bottom: 0px;\r\n  left: 0px;\r\n`\r\n\r\nconst InnerWrapper = styled.div`\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: -3px;\r\n`\r\n\r\nconst BunnyWrapper = styled.div`\r\n  width: 100%;\r\n  animation: ${flyingAnim} 3.5s ease-in-out infinite;\r\n`\r\n\r\nconst StarsWrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n\r\n  & :nth-child(2) {\r\n    animation: ${fading} 2s ease-in-out infinite;\r\n    animation-delay: 1s;\r\n  }\r\n\r\n  & :nth-child(3) {\r\n    animation: ${fading} 5s ease-in-out infinite;\r\n    animation-delay: 0.66s;\r\n  }\r\n\r\n  & :nth-child(4) {\r\n    animation: ${fading} 2.5s ease-in-out infinite;\r\n    animation-delay: 0.33s;\r\n  }\r\n`\r\n\r\nconst imagePath = '/images/home/lunar-bunny/'\r\nconst imageSrc = 'bunny'\r\n\r\nconst starsImage: CompositeImageProps = {\r\n  path: '/images/home/lunar-bunny/',\r\n  attributes: [\r\n    { src: 'star-l', alt: '3D Star' },\r\n    { src: 'star-r', alt: '3D Star' },\r\n    { src: 'star-top-r', alt: '3D Star' },\r\n  ],\r\n}\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const { theme } = useTheme()\r\n\r\n  return (\r\n    <>\r\n      <BgWrapper>\r\n        <InnerWrapper>{theme.isDark ? <SlideSvgDark width=\"100%\" /> : <SlideSvgLight width=\"100%\" />}</InnerWrapper>\r\n      </BgWrapper>\r\n      <Flex\r\n        position=\"relative\"\r\n        flexDirection={['column-reverse', null, null, 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex flex=\"1\" flexDirection=\"column\">\r\n          <Heading scale=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n            {t('Magic Dex')}\r\n          </Heading>\r\n          <Heading scale=\"md\" mb=\"24px\">\r\n            {t('Earn, trade, and store your crypto freely in a decentralized, permissionless environment.')}\r\n          </Heading>\r\n          <Flex>\r\n            {!account && <ConnectWalletButton mr=\"8px\" />}\r\n            <Link mr=\"16px\" href=\"/swap\">\r\n              <Button variant={!account ? 'secondary' : 'primary'}>{t('Trade Now')}</Button>\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n          position=\"relative\"\r\n        >\r\n          <BunnyWrapper>\r\n            <img src={`${imagePath}${imageSrc}.png`} srcSet={getSrcSet(imagePath, imageSrc)} alt={t('Lunar bunny')} />\r\n          </BunnyWrapper>\r\n          <StarsWrapper>\r\n            <CompositeImage {...starsImage} />\r\n          </StarsWrapper>\r\n        </Flex>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import { SalesSectionProps } from '.'\r\n\r\nexport const swapSectionData: SalesSectionProps = {\r\n  headingText: 'Trade Cryptocurrency with Ease.',\r\n  bodyText: 'Connect your wallet to instantly swap tokens while retaining complete control over your assets for a seamless trading experience.',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap',\r\n    text: 'Trade Now',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://magicdex.app/',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/trade/',\r\n    attributes: [\r\n      { src: 'Eth', alt: 'Eth token' },\r\n      { src: 'BTC', alt: 'BTC token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const earnSectionData: SalesSectionProps = {\r\n  headingText: 'Explore Earning Potential.',\r\n  bodyText: 'Maximize efforts and allow cryptocurrency to generate daily returns while focusing on what matters most.',\r\n  reverse: true,\r\n  primaryButton: {\r\n    to: '/farms',\r\n    text: 'Explore',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://magicdex.app/wp.pdf',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n  images: {\r\n    path: '/images/home/earn/',\r\n    attributes: [\r\n      { src: 'pie', alt: 'Pie chart' },\r\n      { src: 'stonks', alt: 'Stocks chart' },\r\n      { src: 'folder', alt: 'Folder with cake token' },\r\n    ],\r\n  },\r\n}\r\n\r\nexport const cakeSectionData: SalesSectionProps = {\r\n  headingText: 'MAGIC fuels the universe.',\r\n  bodyText:\r\n    'Revolutionizing blockchain one block at a time. MAGIC token is the driving force behind The Crypto Spot and its ecosystem. Earn, trade, and store crypto in The Crypto Spot!',\r\n  reverse: false,\r\n  primaryButton: {\r\n    to: '/swap?outputCurrency=0xC58322eb9554e7927C1d08D93FC3aBdB0D3EdAb0',\r\n    text: 'Buy MAGIC',\r\n    external: false,\r\n  },\r\n  secondaryButton: {\r\n    to: 'https://magicdex.app/',\r\n    text: 'Learn',\r\n    external: true,\r\n  },\r\n\r\n  images: {\r\n    path: '/images/home/cake/',\r\n    attributes: [\r\n      { src: 'bottom-right', alt: 'Small 3d pancake' },\r\n      { src: 'top-right', alt: 'Small 3d pancake' },\r\n      { src: 'top-left', alt: 'Small 3d pancake' },\r\n    ],\r\n  },\r\n}\r\n","import React, { ReactNode } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody, Box, CardProps } from '@pancakeswap/uikit'\r\n\r\nconst StyledCard = styled(Card)<{ background: string; rotation?: string }>`\r\n  height: fit-content;\r\n  padding: 1px 1px 4px 1px;\r\n  box-sizing: border-box;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\nconst IconWrapper = styled(Box)<{ rotation?: string }>`\r\n  position: absolute;\r\n  top: 24px;\r\n  right: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    ${({ rotation }) => (rotation ? `transform: rotate(${rotation});` : '')}\r\n  }\r\n`\r\n\r\ninterface IconCardProps extends IconCardData, CardProps {\r\n  children: ReactNode\r\n}\r\n\r\nexport interface IconCardData {\r\n  icon: ReactNode\r\n  background?: string\r\n  borderColor?: string\r\n  rotation?: string\r\n}\r\n\r\nconst IconCard: React.FC<IconCardProps> = ({ icon, background, borderColor, rotation, children, ...props }) => {\r\n  return (\r\n    <StyledCard background={background} borderBackground={borderColor} rotation={rotation} {...props}>\r\n      <CardBody>\r\n        <IconWrapper rotation={rotation}>{icon}</IconWrapper>\r\n        {children}\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default IconCard\r\n","import React from 'react'\r\nimport { Heading, Flex, Text, useMatchBreakpoints } from '@pancakeswap/uikit'\r\n\r\nconst StatCardContent: React.FC<{ headingText: string; bodyText: string; highlightColor: string }> = ({\r\n  headingText,\r\n  bodyText,\r\n  highlightColor,\r\n}) => {\r\n  const { isMobile, isTablet } = useMatchBreakpoints()\r\n  const isSmallerScreen = isMobile || isTablet\r\n  const split = headingText.split(' ')\r\n  const lastWord = split.pop()\r\n  const remainingWords = split.slice(0, split.length).join(' ')\r\n\r\n  return (\r\n    <Flex\r\n      minHeight={[null, null, null, '168px']}\r\n      minWidth=\"232px\"\r\n      width=\"fit-content\"\r\n      flexDirection=\"column\"\r\n      justifyContent=\"flex-end\"\r\n      mt={[null, null, null, '64px']}\r\n    >\r\n      {isSmallerScreen && remainingWords.length > 13 ? (\r\n        <Heading scale=\"lg\">{remainingWords}</Heading>\r\n      ) : (\r\n        <Heading scale=\"xl\">{remainingWords}</Heading>\r\n      )}\r\n      <Heading color={highlightColor} scale=\"xl\" mb=\"24px\">\r\n        {lastWord}\r\n      </Heading>\r\n      <Text color=\"textSubtle\">{bodyText}</Text>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StatCardContent\r\n","import BigNumber from 'bignumber.js'\r\nimport { useEffect, useMemo } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmsPublicDataAsync, fetchPoolsPublicDataAsync, fetchPoolsUserDataAsync } from './actions'\r\nimport { State, Farm, Pool } from './types'\r\nimport { QuoteToken } from '../config/constants/types'\r\n\r\nconst ZERO = new BigNumber(0)\r\n\r\n// export const useFetchPublicData = () => {\r\n//   const dispatch = useDispatch()\r\n//   const { slowRefresh } = useRefresh()\r\n//   useEffect(() => {\r\n//     dispatch(fetchFarmsPublicDataAsync())\r\n//      dispatch(fetchPoolsPublicDataAsync())\r\n//   }, [dispatch, slowRefresh])\r\n// }\r\n\r\n// Farms\r\n\r\nexport const useFarms = (): Farm[] => {\r\n  const farms = useSelector((state: State) => state.farms.data)\r\n  return farms\r\n}\r\n\r\nexport const useFarmFromPid = (pid): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\r\n  return farm\r\n}\r\n\r\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\r\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\r\n  return farm\r\n}\r\n\r\nexport const useFarmUser = (pid) => {\r\n  const farm = useFarmFromPid(pid)\r\n\r\n  return {\r\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\r\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\r\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\r\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\r\n  }\r\n}\r\n\r\n\r\n// Pools\r\n\r\nexport const usePools = (account): Pool[] => {\r\n  const { fastRefresh } = useRefresh()\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchPoolsUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const pools = useSelector((state: State) => state.pools.data)\r\n  return pools\r\n}\r\n\r\nexport const usePoolFromPid = (sousId): Pool => {\r\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\r\n  return pool\r\n}\r\n\r\n// Prices\r\n\r\nexport const usePriceBnbBusd = (): BigNumber => {\r\n  const pid = 2 // SHIDO-USDC LP\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? (new BigNumber(1)).div(new BigNumber(farm.tokenPriceVsQuote)) : ZERO\r\n}\r\n\r\nexport const usePriceCakeBusd = (): BigNumber => {\r\n  const pid = 1 // MAGIC-SHIDO LP\r\n  const ethPriceUSD = usePriceBnbBusd()\r\n  const farm = useFarmFromPid(pid)\r\n  return farm.tokenPriceVsQuote ? ethPriceUSD.times((new BigNumber(1)).div(new BigNumber(farm.tokenPriceVsQuote))) : ZERO\r\n  // const pid = 0; // EGG-BUSD LP\r\n  // const pid = 0; // EGG-BUSD LP\r\n  // const farm = useFarmFromPid(pid);\r\n  // return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO;\r\n}\r\n\r\nexport const useTotalValue = (): BigNumber => {\r\n  const farms = useFarms();\r\n  const ethPrice = usePriceBnbBusd();\r\n  const magicPrice = usePriceCakeBusd();\r\n  // const treePrice = usePriceTreeBusd();\r\n  let value = new BigNumber(0);\r\n  for (let i = 0; i < farms.length; i++) {\r\n    const farm = farms[i]\r\n    if (farm.quoteTokenAmountTotal) {\r\n      let val = new BigNumber(0);\r\n      if (farm.quoteToken.symbol === QuoteToken.SHIDO) {\r\n        val = (ethPrice.times(farm.quoteTokenAmountTotal));\r\n      } else if (farm.quoteToken.symbol === QuoteToken.MAGIC) {\r\n        val = (magicPrice.times(farm.quoteTokenAmountTotal));\r\n      } else {\r\n        val = new BigNumber(farm.quoteTokenAmountTotal);\r\n      }\r\n\r\n      if (farm.pid !== 4)\r\n        value = value.plus(val);\r\n    }\r\n  }\r\n  return value;\r\n}","import React from 'react'\r\nimport { Heading, Flex, Text, Skeleton, ChartIcon, CommunityIcon, SwapIcon, NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetStats } from 'hooks/api'\r\nimport useTheme from 'hooks/useTheme'\r\nimport { formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport styled from 'styled-components'\r\nimport IconCard, { IconCardData } from '../IconCard'\r\nimport StatCardContent from './StatCardContent'\r\nimport { useTotalValue } from '../../../../state/hooks'\r\n// import GradientLogo from '../GradientLogoSvg'\r\n\r\n// Values fetched from bitQuery effective 13/8/21\r\nconst txCount = 1500\r\nconst addressCount = 132\r\n\r\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\r\n    height: 100%;\r\n    width: 100%;\r\n  `\r\nconst Sticker = styled(Flex)`\r\n  height: 92px;\r\n  width: 92px;\r\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nconst Stats = () => {\r\n  const { t } = useTranslation()\r\n  // const data = useGetStats()\r\n  const { theme } = useTheme()\r\n\r\n  // const tvlString = data ? formatLocalisedCompactNumber(data.tvl) : '-'\r\n  const totalValueBignumber = useTotalValue();\r\n  const totalValue = totalValueBignumber.toFixed(0);\r\n  const trades = formatLocalisedCompactNumber(txCount)\r\n  const users = formatLocalisedCompactNumber(addressCount)\r\n\r\n  const tvlText = t('And those users are now entrusting the platform with over $%tvl% in funds.', { tvl: totalValue })\r\n  const [entrusting, inFunds] = tvlText.split(totalValue)\r\n\r\n  const UsersCardData: IconCardData = {\r\n    icon: <CommunityIcon color=\"secondary\" width=\"36px\" />,\r\n  }\r\n\r\n  const TradesCardData: IconCardData = {\r\n    icon: <SwapIcon color=\"primary\" width=\"36px\" />,\r\n  }\r\n\r\n  const StakedCardData: IconCardData = {\r\n    icon: <ChartIcon color=\"failure\" width=\"36px\" />,\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n      {/* <GradientLogo height=\"48px\" width=\"48px\" mb=\"24px\" /> */}\r\n      <Sticker><StyledNoProfileAvatarIcon /></Sticker>\r\n      <Heading textAlign=\"center\" scale=\"xl\">\r\n        {t('Trusted by users.')}\r\n      </Heading>\r\n      <Heading textAlign=\"center\" scale=\"xl\" mb=\"32px\">\r\n        {t('Empowered by innovation.')}\r\n      </Heading>\r\n      <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\r\n        {t('Magicdex, launched in 2024, is dedicated to providing secure and transparent services. As we begin our journey, we are eager to build a trusted platform with you.')}\r\n      </Text>\r\n      {/* <Flex flexWrap=\"wrap\">\r\n        <Text display=\"inline\" textAlign=\"center\" color=\"textSubtle\" mb=\"20px\">\r\n          {entrusting}\r\n          <>{totalValue ? <>{totalValue}</> : <Skeleton display=\"inline-block\" height={16} width={70} mt=\"2px\" />}</>\r\n          {inFunds}\r\n        </Text>\r\n      </Flex> */}\r\n\r\n      {/* <Text textAlign=\"center\" color=\"textSubtle\" bold mb=\"32px\">\r\n        {t('Will you join them?')}\r\n      </Text> */}\r\n\r\n      <Flex flexDirection={['column', null, null, 'row']}>\r\n        <IconCard {...UsersCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('%users% users', { users })}\r\n            bodyText={t('in the last 30 days')}\r\n            highlightColor={theme.colors.secondary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...TradesCardData} mr={[null, null, null, '16px']} mb={['16px', null, null, '0']}>\r\n          <StatCardContent\r\n            headingText={t('%trades% trades', { trades })}\r\n            bodyText={t('made in the last 30 days')}\r\n            highlightColor={theme.colors.primary}\r\n          />\r\n        </IconCard>\r\n        <IconCard {...StakedCardData}>\r\n          <StatCardContent\r\n            headingText={t('$%tvl% TVL', { tvl: totalValue })}\r\n            bodyText={t('Total Value Locked')}\r\n            highlightColor={theme.colors.failure}\r\n          />\r\n        </IconCard>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Stats\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst PurpleWordHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n  return (\r\n    <Heading scale=\"xl\" mb=\"24px\" {...props}>\r\n      <span style={{ color: theme.colors.secondary }}>{firstWord} </span>\r\n      {remainingWords}\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default PurpleWordHeading\r\n","import React from 'react'\r\nimport { Flex, Text, Button, Link } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport CompositeImage, { CompositeImageProps } from '../CompositeImage'\r\nimport PurpleWordHeading from '../PurpleWordHeading'\r\n\r\ninterface SalesSectionButton {\r\n  to: string\r\n  text: string\r\n  external: boolean\r\n}\r\n\r\nexport interface SalesSectionProps {\r\n  headingText: string\r\n  bodyText: string\r\n  reverse: boolean\r\n  primaryButton: SalesSectionButton\r\n  secondaryButton: SalesSectionButton\r\n  images: CompositeImageProps\r\n}\r\n\r\nconst SalesSection: React.FC<SalesSectionProps> = (props) => {\r\n  const { t } = useTranslation()\r\n\r\n  const { headingText, bodyText, reverse, primaryButton, secondaryButton, images } = props\r\n\r\n  const headingTranslatedText = t(headingText)\r\n  const bodyTranslatedText = t(bodyText)\r\n\r\n  return (\r\n    <Flex flexDirection=\"column\">\r\n      <Flex\r\n        flexDirection={['column-reverse', null, null, reverse ? 'row-reverse' : 'row']}\r\n        alignItems={['flex-end', null, null, 'center']}\r\n        justifyContent=\"center\"\r\n      >\r\n        <Flex\r\n          flexDirection=\"column\"\r\n          flex=\"1\"\r\n          ml={[null, null, null, reverse && '64px']}\r\n          mr={[null, null, null, !reverse && '64px']}\r\n          alignSelf={['flex-start', null, null, 'center']}\r\n        >\r\n          <PurpleWordHeading text={headingTranslatedText} />\r\n          <Text color=\"textSubtle\" mb=\"24px\">\r\n            {bodyTranslatedText}\r\n          </Text>\r\n          <Flex>\r\n            <Link mr=\"16px\" external={primaryButton.external} href={primaryButton.to}>\r\n              <Button>\r\n                <Text color=\"card\" bold fontSize=\"16px\">\r\n                  {t(primaryButton.text)}\r\n                </Text>\r\n              </Button>\r\n            </Link>\r\n            <Link external={secondaryButton.external} href={secondaryButton.to}>\r\n              {t(secondaryButton.text)}\r\n            </Link>\r\n          </Flex>\r\n        </Flex>\r\n        <Flex\r\n          height={['192px', null, null, '100%']}\r\n          width={['192px', null, null, '100%']}\r\n          flex={[null, null, null, '1']}\r\n          mb={['24px', null, null, '0']}\r\n        >\r\n          <CompositeImage {...images} />\r\n        </Flex>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default SalesSection\r\n","import { useEffect, useRef, useState } from 'react'\r\n\r\nconst useIntersectionObserver = () => {\r\n  const observerRef = useRef<HTMLDivElement>(null)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n  const [isIntersecting, setIsIntersecting] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const checkObserverIsIntersecting = ([entry]: IntersectionObserverEntry[]) => {\r\n      setIsIntersecting(entry.isIntersecting)\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const intersectionObserver = new IntersectionObserver(checkObserverIsIntersecting, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      intersectionObserver.observe(observerRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [observerIsSet])\r\n\r\n  return { observerRef, isIntersecting }\r\n}\r\n\r\nexport default useIntersectionObserver\r\n","import { useState, useEffect, useMemo } from 'react'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { useAppDispatch } from 'state'\r\nimport { orderBy } from 'lodash'\r\nimport { Pool, State } from 'state/types'\r\nimport { fetchCakeVaultFees, fetchPoolsPublicDataAsync } from 'state/pools'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport { useSelector } from 'react-redux'\r\nimport { useCakeVault } from 'state/pools/hooks'\r\nimport { getAprData } from 'views/Pools/helpers'\r\n\r\nenum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  FETCHING = 'fetching',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nconst useGetTopPoolsByApr = (isIntersecting: boolean) => {\r\n  const dispatch = useAppDispatch()\r\n  const { pools: poolsWithoutAutoVault } = useSelector((state: State) => ({\r\n    pools: state.pools.data,\r\n    userDataLoaded: state.pools.userDataLoaded,\r\n  }))\r\n  const {\r\n    fees: { performanceFee },\r\n  } = useCakeVault()\r\n  const performanceFeeAsDecimal = performanceFee && performanceFee / 100\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [topPools, setTopPools] = useState<Pool[]>([null, null, null, null, null])\r\n\r\n  const pools = useMemo(() => {\r\n    const activePools = poolsWithoutAutoVault.filter((pool) => !pool.isFinished)\r\n    const cakePool = activePools.find((pool) => pool.sousId === 0)\r\n    const cakeAutoVault = { ...cakePool, isAutoVault: true }\r\n    const cakeAutoVaultWithApr = { ...cakeAutoVault, apr: getAprData(cakeAutoVault, performanceFeeAsDecimal).apr }\r\n    return [cakeAutoVaultWithApr, ...poolsWithoutAutoVault]\r\n  }, [poolsWithoutAutoVault, performanceFeeAsDecimal])\r\n\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n\r\n  useEffect(() => {\r\n    const fetchPoolsPublicData = async () => {\r\n      setFetchStatus(FetchStatus.FETCHING)\r\n      const blockNumber = await simpleRpcProvider.getBlockNumber()\r\n\r\n      try {\r\n        await dispatch(fetchCakeVaultFees())\r\n        await dispatch(fetchPoolsPublicDataAsync(blockNumber))\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch (e) {\r\n        console.error(e)\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (isIntersecting && fetchStatus === FetchStatus.NOT_FETCHED) {\r\n      fetchPoolsPublicData()\r\n    }\r\n  }, [dispatch, setFetchStatus, fetchStatus, topPools, isIntersecting])\r\n\r\n  useEffect(() => {\r\n    const getTopPoolsByApr = (activePools: Pool[]) => {\r\n      const sortedByApr = orderBy(activePools, (pool: Pool) => pool.apr || 0, 'desc')\r\n      setTopPools(sortedByApr.slice(0, 5))\r\n    }\r\n    if (fetchStatus === FetchStatus.SUCCESS && !topPools[0]) {\r\n      getTopPoolsByApr(pools)\r\n    }\r\n  }, [setTopPools, pools, fetchStatus, cakePriceBusd, topPools, performanceFeeAsDecimal])\r\n\r\n  return { topPools }\r\n}\r\n\r\nexport default useGetTopPoolsByApr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Skeleton, Text } from '@pancakeswap/uikit'\r\nimport Balance from 'components/Balance'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface TopFarmPoolProps {\r\n  title: string\r\n  percentage: number\r\n  index: number\r\n  visible: boolean\r\n}\r\n\r\nconst StyledWrapper = styled(Flex)<{ index: number }>`\r\n  position: relative;\r\n`\r\n\r\nconst AbsoluteWrapper = styled(Flex)<{ visible: boolean; index: number; topOffset: string }>`\r\n  position: absolute;\r\n  top: ${({ topOffset }) => topOffset};\r\n  opacity: ${({ visible }) => (visible ? 1 : 0)};\r\n  margin-top: ${({ visible }) => (visible ? 0 : `50%`)};\r\n  transition: opacity, margin-top, 0.4s ease-out;\r\n  flex-direction: column;\r\n\r\n  ${({ index, theme }) =>\r\n    index > 0\r\n      ? `\r\n         ${theme.mediaQueries.sm} {\r\n           height: 80px;\r\n           top: 0;\r\n           padding-left: 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `padding-right: 16px;`}\r\n`\r\n\r\nconst TopFarmPool: React.FC<TopFarmPoolProps> = ({ title, percentage, index, visible }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const topOffset = () => {\r\n    if (index >= 0 && index < 2) {\r\n      return '0px'\r\n    }\r\n\r\n    if (index >= 2 && index < 3) {\r\n      return '80px'\r\n    }\r\n\r\n    return '160px'\r\n  }\r\n\r\n  return (\r\n    <StyledWrapper index={index}>\r\n      <AbsoluteWrapper index={index} visible={visible} topOffset={topOffset()}>\r\n        {title ? (\r\n          <Text bold mb=\"8px\" fontSize=\"12px\" color=\"secondary\">\r\n            {title}\r\n          </Text>\r\n        ) : (\r\n          <Skeleton width={80} height={12} mb=\"8px\" />\r\n        )}\r\n        {percentage ? (\r\n          <Balance lineHeight=\"1.1\" fontSize=\"16px\" bold unit=\"%\" value={percentage} />\r\n        ) : (\r\n          <Skeleton width={60} height={16} />\r\n        )}\r\n        {percentage ? (\r\n          <Text fontSize=\"16px\" color=\"textSubtle\">\r\n            {t('APR')}\r\n          </Text>\r\n        ) : (\r\n          <Skeleton width={30} height={16} mt=\"4px\" />\r\n        )}\r\n      </AbsoluteWrapper>\r\n    </StyledWrapper>\r\n  )\r\n}\r\n\r\nexport default TopFarmPool\r\n","import React from 'react'\r\nimport { Heading, TextProps } from '@pancakeswap/uikit'\r\nimport useTheme from 'hooks/useTheme'\r\n\r\ninterface HeadingProps extends TextProps {\r\n  text: string\r\n}\r\n\r\nconst RowHeading: React.FC<HeadingProps> = ({ text, ...props }) => {\r\n  const { theme } = useTheme()\r\n  const split = text.split(' ')\r\n  const firstWord = split[0]\r\n  const remainingWords = split.slice(1).join(' ')\r\n\r\n  return (\r\n    <Heading {...props}>\r\n      {firstWord}\r\n      <span style={{ color: theme.colors.secondary }}> {remainingWords}</span>\r\n    </Heading>\r\n  )\r\n}\r\n\r\nexport default RowHeading\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Box, SwapVertIcon, IconButton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Pool } from 'state/types'\r\nimport useIntersectionObserver from 'hooks/useIntersectionObserver'\r\nimport useGetTopFarmsByApr from 'views/Home/hooks/useGetTopFarmsByApr'\r\nimport useGetTopPoolsByApr from 'views/Home/hooks/useGetTopPoolsByApr'\r\nimport TopFarmPool from './TopFarmPool'\r\nimport RowHeading from './RowHeading'\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n    grid-template-columns: repeat(5, auto);\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n  }\r\n`\r\n\r\nconst FarmsPoolsRow = () => {\r\n  const [showFarms, setShowFarms] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { observerRef, isIntersecting } = useIntersectionObserver()\r\n  const { topFarms } = useGetTopFarmsByApr(isIntersecting)\r\n  const { topPools } = useGetTopPoolsByApr(isIntersecting)\r\n\r\n  const timer = useRef<ReturnType<typeof setTimeout>>(null)\r\n  const isLoaded = topFarms[0] && topPools[0]\r\n\r\n  const startTimer = useCallback(() => {\r\n    timer.current = setInterval(() => {\r\n      setShowFarms((prev) => !prev)\r\n    }, 6000)\r\n  }, [timer])\r\n\r\n  useEffect(() => {\r\n    if (isLoaded) {\r\n      startTimer()\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(timer.current)\r\n    }\r\n  }, [timer, isLoaded, startTimer])\r\n\r\n  const getPoolText = (pool: Pool) => {\r\n    if (pool.isAutoVault) {\r\n      return t('Auto MAGIC')\r\n    }\r\n\r\n    if (pool.sousId === 0) {\r\n      return t('Manual MAGIC')\r\n    }\r\n\r\n    return t('Stake %stakingSymbol% - Earn %earningSymbol%', {\r\n      earningSymbol: pool.earningToken.symbol,\r\n      stakingSymbol: pool.stakingToken.symbol,\r\n    })\r\n  }\r\n\r\n  return (\r\n    <div ref={observerRef}>\r\n      <Flex flexDirection=\"column\" mt=\"24px\">\r\n        <Flex mb=\"24px\">\r\n          <RowHeading text={showFarms ? t('Top Farms') : t('Top Pools')} />\r\n          <IconButton\r\n            variant=\"text\"\r\n            height=\"100%\"\r\n            width=\"auto\"\r\n            onClick={() => {\r\n              setShowFarms((prev) => !prev)\r\n              clearInterval(timer.current)\r\n              startTimer()\r\n            }}\r\n          >\r\n            <SwapVertIcon height=\"24px\" width=\"24px\" color=\"textSubtle\" />\r\n          </IconButton>\r\n        </Flex>\r\n        <Box height={['240px', null, '80px']}>\r\n          <Grid>\r\n            {topFarms.map((topFarm, index) => (\r\n              <TopFarmPool\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                key={index}\r\n                title={topFarm?.lpSymbol}\r\n                percentage={topFarm?.apr + topFarm?.lpRewardsApr}\r\n                index={index}\r\n                visible={showFarms}\r\n              />\r\n            ))}\r\n          </Grid>\r\n          <Grid>\r\n            {topPools.map((topPool, index) => (\r\n              <TopFarmPool\r\n                // eslint-disable-next-line react/no-array-index-key\r\n                key={index}\r\n                title={topPool && getPoolText(topPool)}\r\n                percentage={topPool?.apr}\r\n                index={index}\r\n                visible={!showFarms}\r\n              />\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Flex>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FarmsPoolsRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTotalSupply, useBurnedBalance } from 'hooks/useTokenBalance'\r\nimport { getCakeAddress } from 'utils/addressHelpers'\r\nimport { getBalanceNumber, formatLocalisedCompactNumber } from 'utils/formatBalance'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport { Flex, Text, Heading, Skeleton } from '@pancakeswap/uikit'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Balance from 'components/Balance'\r\n\r\nconst StyledColumn = styled(Flex)<{ noMobileBorder?: boolean }>`\r\n  flex-direction: column;\r\n  ${({ noMobileBorder, theme }) =>\r\n    noMobileBorder\r\n      ? `${theme.mediaQueries.md} {\r\n           padding: 0 16px;\r\n           border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         }\r\n       `\r\n      : `border-left: 1px ${theme.colors.inputSecondary} solid;\r\n         padding: 0 8px;\r\n         ${theme.mediaQueries.sm} {\r\n           padding: 0 16px;\r\n         }\r\n       `}\r\n`\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-gap: 16px 8px;\r\n  margin-top: 24px;\r\n  grid-template-columns: repeat(2, auto);\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    grid-gap: 16px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    grid-gap: 32px;\r\n    grid-template-columns: repeat(4, auto);\r\n  }\r\n`\r\n\r\nconst emissionsPerBlock = 15\r\n\r\nconst CakeDataRow = () => {\r\n  const { t } = useTranslation()\r\n  const totalSupply = useTotalSupply()\r\n  const burnedBalance = getBalanceNumber(useBurnedBalance(getCakeAddress()))\r\n  const cakeSupply = totalSupply ? getBalanceNumber(totalSupply) - burnedBalance : 0\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const mcap = cakePriceBusd.times(cakeSupply)\r\n  const mcapString = formatLocalisedCompactNumber(mcap.toNumber())\r\n\r\n  return (\r\n    <Grid>\r\n      {/*\r\n      <Flex flexDirection=\"column\">\r\n\r\n        <Text color=\"textSubtle\">{t('Total supply')}</Text>\r\n        {cakeSupply ? (\r\n          <Balance decimals={0} lineHeight=\"1.1\" fontSize=\"24px\" bold value={cakeSupply} />\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </Flex>\r\n        \r\n      <StyledColumn noMobileBorder>\r\n        <Text color=\"textSubtle\">{t('Market cap')}</Text>\r\n        {mcap?.gt(0) && mcapString ? (\r\n          <Heading scale=\"lg\">{t('$%marketCap%', { marketCap: mcapString })}</Heading>\r\n        ) : (\r\n          <Skeleton height={24} width={126} my=\"4px\" />\r\n        )}\r\n      </StyledColumn>\r\n      <StyledColumn>\r\n        <Text color=\"textSubtle\">{t('Current emissions')}</Text>\r\n\r\n        <Heading scale=\"lg\">{t('%cakeEmissions%/block', { cakeEmissions: emissionsPerBlock })}</Heading>\r\n      </StyledColumn>\r\n      */}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CakeDataRow\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Svg, SvgProps } from '@pancakeswap/uikit'\r\n\r\nexport const OuterWedgeWrapper = styled.div`\r\n  z-index: -1;\r\n  overflow: hidden;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  right: 0px;\r\n  top: 0px;\r\n`\r\n\r\nexport const InnerWedgeWrapper = styled.div<{ fill: string; top?: boolean; width?: string }>`\r\n  position: absolute;\r\n  display: flex;\r\n  width: 100%;\r\n  ${({ top }) => (top ? 'top: 0px' : 'bottom: 0px')};\r\n\r\n  svg {\r\n    fill: ${({ fill }) => fill};\r\n    width: ${({ width }) => width || '100%'};\r\n    height: 100%;\r\n    max-height: 48px;\r\n  }\r\n`\r\n\r\nexport const WedgeTopLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 48C1139.02 46.1887 336.256 15.2453 0 0H1660V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeTopRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M-346 48C174.985 46.1887 977.744 15.2453 1314 0H-346V48Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomRight: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M0 0C520.985 1.81132 1323.74 32.7547 1660 48H0V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n\r\nexport const WedgeBottomLeft: React.FC<SvgProps> = (props) => {\r\n  return (\r\n    <Svg viewBox=\"0 0 1660 48\" {...props} preserveAspectRatio=\"none\">\r\n      <path d=\"M1660 0C1139.02 1.81132 336.256 32.7547 0 48H1660V0Z\" />\r\n    </Svg>\r\n  )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport multicall from 'utils/multicall'\r\nimport { getMasterChefAddress } from 'utils/addressHelpers'\r\nimport masterChefABI from 'config/abi/masterchef.json'\r\nimport { farmsConfig } from 'config/constants'\r\nimport { FarmConfig } from 'config/constants/types'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { DEFAULT_TOKEN_DECIMAL } from 'config'\r\n\r\nexport interface FarmWithBalance extends FarmConfig {\r\n  balance: BigNumber\r\n}\r\n\r\nconst useFarmsWithBalance = () => {\r\n  const [farmsWithStakedBalance, setFarmsWithStakedBalance] = useState<FarmWithBalance[]>([])\r\n  const [earningsSum, setEarningsSum] = useState<number>(null)\r\n  const { account } = useWeb3React()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalances = async () => {\r\n      const calls = farmsConfig.map((farm) => ({\r\n        address: getMasterChefAddress(),\r\n        name: 'pendingMAGIC',\r\n        params: [farm.pid, account],\r\n      }))\r\n\r\n      const rawResults = await multicall(masterChefABI, calls)\r\n\r\n      const results = farmsConfig.map((farm, index) => ({ ...farm, balance: new BigNumber(rawResults[index]) }))\r\n      const farmsWithBalances = results.filter((balanceType) => balanceType.balance.gt(0))\r\n      const totalEarned = farmsWithBalances.reduce((accum, earning) => {\r\n        const earningNumber = new BigNumber(earning.balance)\r\n        if (earningNumber.eq(0)) {\r\n          return accum\r\n        }\r\n        return accum + earningNumber.div(DEFAULT_TOKEN_DECIMAL).toNumber()\r\n      }, 0)\r\n\r\n      setFarmsWithStakedBalance(farmsWithBalances)\r\n      setEarningsSum(totalEarned)\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalances()\r\n    }\r\n  }, [account, fastRefresh])\r\n\r\n  return { farmsWithStakedBalance, earningsSum }\r\n}\r\n\r\nexport default useFarmsWithBalance\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { AutoRenewIcon, Button, Card, CardBody, Flex, Skeleton, Text, Link, ArrowForwardIcon } from '@pancakeswap/uikit'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/farms/hooks'\r\nimport useToast from 'hooks/useToast'\r\nimport { useMasterchef } from 'hooks/useContract'\r\nimport { harvestFarm } from 'utils/calls'\r\nimport Balance from 'components/Balance'\r\nimport useFarmsWithBalance from 'views/Home/hooks/useFarmsWithBalance'\r\nimport { getEarningsText } from './EarningsText'\r\n\r\nconst StyledCard = styled(Card)`\r\n  width: 100%;\r\n  height: fit-content;\r\n`\r\n\r\nconst HarvestCard = () => {\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { toastSuccess, toastError } = useToast()\r\n  const { farmsWithStakedBalance, earningsSum: farmEarningsSum } = useFarmsWithBalance()\r\n\r\n  const masterChefContract = useMasterchef()\r\n  const cakePriceBusd = usePriceCakeBusd()\r\n  const earningsBusd = new BigNumber(farmEarningsSum).multipliedBy(cakePriceBusd)\r\n  const numTotalToCollect = farmsWithStakedBalance.length\r\n  const numFarmsToCollect = farmsWithStakedBalance.filter((value) => value.pid !== 0).length\r\n  const hasCakePoolToCollect = numTotalToCollect - numFarmsToCollect > 0\r\n\r\n  const earningsText = getEarningsText(numFarmsToCollect, hasCakePoolToCollect, earningsBusd, t)\r\n  const [preText, toCollectText] = earningsText.split(earningsBusd.toString())\r\n\r\n  const harvestAllFarms = useCallback(async () => {\r\n    setPendingTx(true)\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const farmWithBalance of farmsWithStakedBalance) {\r\n      try {\r\n        // eslint-disable-next-line no-await-in-loop\r\n        await harvestFarm(masterChefContract, farmWithBalance.pid)\r\n        toastSuccess(\r\n          `${t('Harvested')}!`,\r\n          t('Your %symbol% earnings have been sent to your wallet!', { symbol: 'MAGIC' }),\r\n        )\r\n      } catch (error) {\r\n        toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n      }\r\n    }\r\n    setPendingTx(false)\r\n  }, [farmsWithStakedBalance, masterChefContract, toastSuccess, toastError, t])\r\n\r\n  return (\r\n    <StyledCard>\r\n      <CardBody>\r\n        <Flex flexDirection={['column', null, null, 'row']} justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Flex flexDirection=\"column\" alignItems={['center', null, null, 'flex-start']}>\r\n            {preText && (\r\n              <Text mb=\"4px\" color=\"textSubtle\">\r\n                {preText}\r\n              </Text>\r\n            )}\r\n            {!earningsBusd.isNaN() ? (\r\n              <Balance\r\n                decimals={earningsBusd.gt(0) ? 2 : 0}\r\n                fontSize=\"24px\"\r\n                bold\r\n                prefix={earningsBusd.gt(0) ? '~$' : '$'}\r\n                lineHeight=\"1.1\"\r\n                value={earningsBusd.toNumber()}\r\n              />\r\n            ) : (\r\n              <Skeleton width={96} height={24} my=\"2px\" />\r\n            )}\r\n            <Text mb={['16px', null, null, '0']} color=\"textSubtle\">\r\n              {toCollectText}\r\n            </Text>\r\n          </Flex>\r\n          {numTotalToCollect <= 0 ? (\r\n            <Link href=\"farms\">\r\n              <Button width={['100%', null, null, 'auto']} variant=\"secondary\">\r\n                <Text color=\"primary\" bold>\r\n                  {t('Start earning')}\r\n                </Text>\r\n                <ArrowForwardIcon ml=\"4px\" color=\"primary\" />\r\n              </Button>\r\n            </Link>\r\n          ) : (\r\n            <Button\r\n              width={['100%', null, null, 'auto']}\r\n              id=\"harvest-all\"\r\n              isLoading={pendingTx}\r\n              endIcon={pendingTx ? <AutoRenewIcon spin color=\"currentColor\" /> : null}\r\n              disabled={pendingTx}\r\n              onClick={harvestAllFarms}\r\n            >\r\n              <Text color=\"invertedContrast\" bold>\r\n                {pendingTx ? t('Harvesting') : t('Harvest all')}\r\n              </Text>\r\n            </Button>\r\n          )}\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default HarvestCard\r\n","import { ContextApi } from 'contexts/Localization/types'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nexport const getEarningsText = (\r\n  numFarmsToCollect: number,\r\n  hasCakePoolToCollect: boolean,\r\n  earningsBusd: BigNumber,\r\n  t: ContextApi['t'],\r\n): string => {\r\n  const data = {\r\n    earningsBusd: earningsBusd.toString(),\r\n    count: numFarmsToCollect,\r\n  }\r\n\r\n  let earningsText = t('%earningsBusd% to collect', data)\r\n\r\n  if (numFarmsToCollect > 0 && hasCakePoolToCollect) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms and MAGIC pool', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm and MAGIC pool', data)\r\n    }\r\n  } else if (numFarmsToCollect > 0) {\r\n    if (numFarmsToCollect > 1) {\r\n      earningsText = t('%earningsBusd% to collect from %count% farms', data)\r\n    } else {\r\n      earningsText = t('%earningsBusd% to collect from %count% farm', data)\r\n    }\r\n  } else if (hasCakePoolToCollect) {\r\n    earningsText = t('%earningsBusd% to collect from MAGIC pool', data)\r\n  }\r\n\r\n  return earningsText\r\n}\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon, Flex, Heading, Skeleton, Text, Box } from '@pancakeswap/uikit'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport styled from 'styled-components'\r\nimport { useProfile } from 'state/profile/hooks'\r\nimport ProfileAvatar from 'views/Profile/components/ProfileAvatar'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport truncateHash from 'utils/truncateHash'\r\n\r\nconst Desktop = styled(Flex)`\r\n  align-items: center;\r\n  display: none;\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: flex;\r\n  }\r\n`\r\n\r\nconst Mobile = styled(Flex)`\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst Sticker = styled(Flex)`\r\n  height: 92px;\r\n  width: 92px;\r\n  box-shadow: ${({ theme }) => theme.card.boxShadow};\r\n  background-color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: ${({ theme }) => theme.radii.circle};\r\n  border: 3px solid ${({ theme }) => theme.colors.invertedContrast};\r\n`\r\n\r\nconst StyledNoProfileAvatarIcon = styled(NoProfileAvatarIcon)`\r\n  height: 100%;\r\n  width: 100%;\r\n`\r\n\r\nconst UserDetail = () => {\r\n  const { profile, isLoading } = useProfile()\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const truncatedAddress = truncateHash(account)\r\n\r\n  const getDesktopHeading = () => {\r\n    if (profile) {\r\n      return <Heading scale=\"xl\">{t('Hi, %userName%!', { userName: profile.username })}</Heading>\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={200} height={40} my=\"4px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  const getMobileHeading = () => {\r\n    if (profile) {\r\n      return (\r\n        <Heading mb=\"18px\" textAlign=\"center\">\r\n          {t('Hi, %userName%!', { userName: profile.username })}\r\n        </Heading>\r\n      )\r\n    }\r\n    if (isLoading && !profile) {\r\n      return <Skeleton width={120} height={20} mt=\"2px\" mb=\"18px\" />\r\n    }\r\n    return <></>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Desktop>\r\n        <Box mr=\"24px\">\r\n          <Sticker>{profile ? <ProfileAvatar profile={profile} /> : <StyledNoProfileAvatarIcon />}</Sticker>\r\n        </Box>\r\n        <Flex flexDirection=\"column\">\r\n          {getDesktopHeading()}\r\n          {isLoading || !account ? (\r\n            <Skeleton width={160} height={16} my=\"4px\" />\r\n          ) : (\r\n            <Text fontSize=\"16px\"> {t('Connected with %address%', { address: truncatedAddress })}</Text>\r\n          )}\r\n        </Flex>\r\n      </Desktop>\r\n      <Mobile>{getMobileHeading()}</Mobile>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserDetail\r\n","import React from 'react'\r\nimport { Box, Flex } from '@pancakeswap/uikit'\r\nimport styled from 'styled-components'\r\nimport HarvestCard from './HarvestCard'\r\nimport UserDetail from './UserDetail'\r\n\r\nconst StyledCard = styled(Box)`\r\n  border-bottom: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-left: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-right: 1px ${({ theme }) => theme.colors.secondary} solid;\r\n  border-radius: ${({ theme }) => `0 0 ${theme.radii.card} ${theme.radii.card}`};\r\n`\r\n// background: ${({ theme }) =>theme.isDark? 'linear-gradient(360deg, rgba(49, 61, 92, 0.9) 0%, rgba(61, 42, 84, 0.9) 100%)': 'linear-gradient(180deg, rgba(202, 194, 236, 0.9) 0%,  rgba(204, 220, 239, 0.9) 51.04%, rgba(206, 236, 243, 0.9) 100%)'};\r\n\r\nconst UserBanner = () => {\r\n  return (\r\n    <StyledCard p={['16px', null, null, '24px']}>\r\n      <Flex alignItems=\"center\" justifyContent=\"center\" flexDirection={['column', null, null, 'row']}>\r\n        <Flex flex=\"1\" mr={[null, null, null, '32px']}>\r\n          <UserDetail />\r\n        </Flex>\r\n        <Flex flex=\"1\" width={['100%', null, 'auto']}>\r\n          <HarvestCard />\r\n        </Flex>\r\n      </Flex>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default UserBanner\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport PageSection from 'components/PageSection'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Container from 'components/Layout/Container'\r\nimport Hero from './components/Hero'\r\nimport { swapSectionData, earnSectionData, cakeSectionData } from './components/SalesSection/data'\r\nimport MetricsSection from './components/MetricsSection'\r\nimport SalesSection from './components/SalesSection'\r\nimport WinSection from './components/WinSection'\r\nimport FarmsPoolsRow from './components/FarmsPoolsRow'\r\nimport Footer from './components/Footer'\r\nimport CakeDataRow from './components/CakeDataRow'\r\nimport { WedgeTopLeft, InnerWedgeWrapper, OuterWedgeWrapper, WedgeTopRight } from './components/WedgeSvgs'\r\nimport UserBanner from './components/UserBanner'\r\n\r\nconst StyledHeroSection = styled(PageSection)`\r\n  padding-top: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    padding-top: 48px;\r\n  }\r\n`\r\n\r\nconst UserBannerWrapper = styled(Container)`\r\n  z-index: 1;\r\n  position: absolute;\r\n  width: 100%;\r\n  top: 0px;\r\n  left: 50%;\r\n  transform: translate(-50%, 0);\r\n  padding-left: 0px;\r\n  padding-right: 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-left: 24px;\r\n    padding-right: 24px;\r\n  }\r\n`\r\n\r\nconst Home: React.FC = () => {\r\n  const { theme } = useTheme()\r\n  const { account } = useWeb3React()\r\n\r\n  const HomeSectionContainerStyles = { margin: '0', width: '100%', maxWidth: '968px' }\r\n\r\n  return (\r\n    <>\r\n      <StyledHeroSection\r\n        innerProps={{ style: { margin: '0', width: '100%' } }}\r\n        // background={\r\n        //   theme.isDark\r\n        //     ? 'radial-gradient(103.12% 50% at 50% 50%, #21193A 0%, #191326 100%)'\r\n        //     : 'linear-gradient(139.73deg, #E6FDFF 0%, #F3EFFF 100%)'\r\n        // }\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        {account && (\r\n          <UserBannerWrapper>\r\n            <UserBanner />\r\n          </UserBannerWrapper>\r\n        )}\r\n        <Hero />\r\n      </StyledHeroSection>\r\n\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <MetricsSection />\r\n      </PageSection>\r\n\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper top fill={theme.isDark ? '#201335' : '#D8CBED'}>\r\n            <WedgeTopLeft />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...swapSectionData} />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.gradients.cardHeader}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <OuterWedgeWrapper>\r\n          <InnerWedgeWrapper width=\"150%\" top fill={theme.colors.background}>\r\n            <WedgeTopRight />\r\n          </InnerWedgeWrapper>\r\n        </OuterWedgeWrapper>\r\n        <SalesSection {...earnSectionData} />\r\n        <FarmsPoolsRow />\r\n      </PageSection>\r\n      <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background={theme.colors.background}\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <SalesSection {...cakeSectionData} />\r\n        <CakeDataRow />\r\n      </PageSection>\r\n\r\n      {/* <PageSection\r\n        innerProps={{ style: HomeSectionContainerStyles }}\r\n        background=\"linear-gradient(180deg, #000910 0%, #000910 100%)\"\r\n        index={2}\r\n        hasCurvedDivider={false}\r\n      >\r\n        <Footer />\r\n      </PageSection> */}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { NoProfileAvatarIcon } from '@pancakeswap/uikit'\r\nimport { Profile } from 'state/types'\r\nimport styled from 'styled-components'\r\n\r\nexport interface ProfileAvatarProps {\r\n  profile: Profile\r\n}\r\n\r\nconst TeamAvatar = styled.img`\r\n  border: 1px solid ${({ theme }) => theme.card.background};\r\n  border-radius: 50%;\r\n  bottom: 0px;\r\n  position: absolute;\r\n  right: 0px;\r\n  min-width: 20px;\r\n  min-height: 20px;\r\n  width: 37.5%;\r\n  height: 37.5%;\r\n  z-index: 5;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    border-width: 2px;\r\n  }\r\n`\r\n\r\nconst AvatarWrapper = styled.div<{ bg: string }>`\r\n  background: url('${({ bg }) => bg}');\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  border-radius: 50%;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n\r\n  & > img {\r\n    border-radius: 50%;\r\n  }\r\n`\r\n// TODO: replace with no profile avatar icon\r\nconst AvatarInactive = styled(NoProfileAvatarIcon)`\r\n  width: 100%;\r\n  height: 100%;\r\n`\r\n\r\nconst ProfileAvatar: React.FC<ProfileAvatarProps> = ({ profile }) => {\r\n  return (\r\n    <AvatarWrapper bg={`/images/nfts/${profile.nft?.images?.md}`}>\r\n      {!profile.isActive && <AvatarInactive />}\r\n      <TeamAvatar src={`/images/teams/${profile.team.images.alt}`} alt={profile.team.name} />\r\n    </AvatarWrapper>\r\n  )\r\n}\r\n\r\nexport default ProfileAvatar\r\n","import React from 'react'\r\nimport styled, { css, DefaultTheme } from 'styled-components'\r\nimport { Box } from '@pancakeswap/uikit'\r\nimport { ClipFill } from '../types'\r\n\r\ninterface CurveProps {\r\n  clipFill?: ClipFill\r\n}\r\n\r\ninterface ContainerProps extends CurveProps {\r\n  clipPath: string\r\n}\r\n\r\nconst sharedStyles = (theme: DefaultTheme, clipPath: string, clipFill?: ClipFill) => css`\r\n  width: 100%;\r\n  height: 20px;\r\n  clip-path: url(${clipPath});\r\n\r\n  background: ${() => {\r\n    if (theme.isDark) {\r\n      return clipFill?.dark || clipFill?.light || theme.colors.background\r\n    }\r\n    return clipFill?.light || theme.colors.background\r\n  }};\r\n\r\n  & svg {\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst ConcaveContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConcaveCurve' ? 'translate(0, -13px)' : 'translate(0, 1px)')};\r\n`\r\n\r\nconst ConvexContainer = styled(Box)<ContainerProps>`\r\n  ${({ theme, clipPath, clipFill }) => sharedStyles(theme, clipPath, clipFill)}\r\n  transform: ${({ clipPath }) => (clipPath === '#bottomConvexCurve' ? 'translate(0, -13px)' : 'translate(0, -1px)')};\r\n`\r\n\r\nexport const ConvexTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#topConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C 0.75 0, .25 0, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConvexBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConvexContainer clipFill={clipFill} clipPath=\"#bottomConvexCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConvexCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConvexContainer>\r\n)\r\n\r\nexport const ConcaveTop: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#topConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"topConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,0 L 0,1 L 1,1 L 1,0 C .75 1, .25 1, 0 0 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n\r\nexport const ConcaveBottom: React.FC<CurveProps> = ({ clipFill }) => (\r\n  <ConcaveContainer clipFill={clipFill} clipPath=\"#bottomConcaveCurve\">\r\n    <svg width=\"0\" height=\"0\">\r\n      <defs>\r\n        <clipPath id=\"bottomConcaveCurve\" clipPathUnits=\"objectBoundingBox\">\r\n          <path d=\"M 0,1 L 0,0 L 1,0 L 1,1 C .75 0.1, .25 0.1, 0 1 Z\" />\r\n        </clipPath>\r\n      </defs>\r\n    </svg>\r\n  </ConcaveContainer>\r\n)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ConcaveTop, ConcaveBottom, ConvexTop, ConvexBottom } from './svg/CurvedSvg'\r\nimport { DividerFill, ClipFill } from './types'\r\n\r\ninterface CurvedDividerProps extends WrapperProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concave?: boolean\r\n  clipFill?: ClipFill\r\n}\r\ninterface WrapperProps {\r\n  index: number\r\n  dividerFill?: DividerFill\r\n}\r\n\r\nconst Wrapper = styled.div<WrapperProps>`\r\n  background: ${({ theme, dividerFill }) => {\r\n    if (theme.isDark) {\r\n      return dividerFill?.dark || dividerFill?.light || 'none'\r\n    }\r\n    return dividerFill?.light || dividerFill?.dark || 'none'\r\n  }};\r\n  z-index: ${({ index }) => index};\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n`\r\n\r\nconst ComponentWrapper = styled.div<WrapperProps>`\r\n  z-index: ${({ index }) => index + 1};\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`\r\n\r\nconst CurvedDivider: React.FC<CurvedDividerProps> = ({\r\n  index,\r\n  dividerPosition,\r\n  dividerComponent,\r\n  concave,\r\n  clipFill,\r\n  dividerFill,\r\n}) => {\r\n  const showConvexTop = dividerPosition === 'top' && !concave\r\n  const showConvexBottom = dividerPosition === 'bottom' && !concave\r\n  const showConcaveTop = dividerPosition === 'top' && concave\r\n  const showConcaveBottom = dividerPosition === 'bottom' && concave\r\n\r\n  const getConcaveDivider = () => {\r\n    return (\r\n      <>\r\n        {showConcaveTop && <ConcaveTop clipFill={clipFill} />}\r\n        {showConcaveBottom && <ConcaveBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  const getConvexDivider = () => {\r\n    return (\r\n      <>\r\n        {showConvexTop && <ConvexTop clipFill={clipFill} />}\r\n        {showConvexBottom && <ConvexBottom clipFill={clipFill} />}\r\n      </>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper index={index} dividerFill={dividerFill}>\r\n      {dividerComponent && <ComponentWrapper index={index}>{dividerComponent}</ComponentWrapper>}\r\n      {getConcaveDivider()}\r\n      {getConvexDivider()}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CurvedDivider\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BoxProps, Box, Flex, FlexProps } from '@pancakeswap/uikit'\r\nimport Container from 'components/Layout/Container'\r\nimport CurvedDivider from './CurvedDivider'\r\nimport { ClipFill, DividerFill } from './types'\r\n\r\ninterface PageSectionProps extends BackgroundColorProps {\r\n  svgFill?: string\r\n  dividerComponent?: React.ReactNode\r\n  hasCurvedDivider?: boolean\r\n  dividerPosition?: 'top' | 'bottom'\r\n  concaveDivider?: boolean\r\n  containerProps?: BoxProps\r\n  innerProps?: BoxProps\r\n  clipFill?: ClipFill\r\n  dividerFill?: DividerFill\r\n}\r\n\r\ninterface BackgroundColorProps extends FlexProps {\r\n  index: number\r\n  background?: string\r\n  getPadding?: () => string\r\n}\r\n\r\nconst BackgroundColor = styled(Flex)<BackgroundColorProps>`\r\n  position: relative;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  z-index: ${({ index }) => index - 1};\r\n  background: ${({ background, theme }) => background || theme.colors.background};\r\n  padding: ${({ getPadding }) => getPadding()};\r\n`\r\n\r\nconst ChildrenWrapper = styled(Container)`\r\n  min-height: auto;\r\n  padding-top: 16px;\r\n  padding-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-top: 32px;\r\n    padding-bottom: 32px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-top: 48px;\r\n    padding-bottom: 48px;\r\n  }\r\n`\r\n\r\nconst PageSection: React.FC<PageSectionProps> = ({\r\n  children,\r\n  background,\r\n  svgFill,\r\n  index = 1,\r\n  dividerComponent,\r\n  dividerPosition = 'bottom',\r\n  hasCurvedDivider = true,\r\n  concaveDivider = false,\r\n  clipFill,\r\n  dividerFill,\r\n  containerProps,\r\n  innerProps,\r\n  ...props\r\n}) => {\r\n  const getPadding = () => {\r\n    // No curved divider\r\n    if (!hasCurvedDivider) {\r\n      return '48px 0'\r\n    }\r\n    // Bottom curved divider\r\n    // Less bottom padding, as the divider is present there\r\n    if (dividerPosition === 'bottom') {\r\n      return '48px 0 14px'\r\n    }\r\n    // Top curved divider\r\n    // Less top padding, as the divider is present there\r\n    if (dividerPosition === 'top') {\r\n      return '14px 0 48px'\r\n    }\r\n    return '48px 0'\r\n  }\r\n\r\n  return (\r\n    <Box {...containerProps}>\r\n      {hasCurvedDivider && dividerPosition === 'top' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n      <BackgroundColor background={background} index={index} getPadding={getPadding} {...props}>\r\n        <ChildrenWrapper {...innerProps}>{children}</ChildrenWrapper>\r\n      </BackgroundColor>\r\n      {hasCurvedDivider && dividerPosition === 'bottom' && (\r\n        <CurvedDivider\r\n          svgFill={svgFill}\r\n          index={index}\r\n          concave={concaveDivider}\r\n          dividerPosition={dividerPosition}\r\n          dividerComponent={dividerComponent}\r\n          clipFill={clipFill}\r\n          dividerFill={dividerFill}\r\n        />\r\n      )}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default PageSection\r\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"sourceRoot":""}